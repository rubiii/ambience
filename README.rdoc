= Ambience

JRuby app configuration feat. Yaml and JVM-Parameters.

Specify a default (development) configuration in a Yaml file and override
its properties via JVM-Parameters for production.

== Install

As a gem:

  $ gem install ambience

As a Rails plugin:

  $ script/plugin install git://github.com/rubiii/ambience.git

== Default configuration

Default configuration at config/ambience.yml

  defaults: &defaults
    auth:
      user: "client"
      password: "secret"
      service: "http://test.example.com"

  development:
    <<: *defaults

  test:
    <<: *defaults

  production:
    <<: *defaults

== Loading the configuration

Place this at the bottom of your config/environment.rb file:

  AppConfig = Ambience.new

== Running your application on MRI

The configuration Hash equals the default configuration file:

  "auth" => {
    "user" => "client",
    "password => "secret",
    "service" => "http://test.example.com"
  }

== Running the application on JRuby

Expecting these default JVM properties:

  jruby.home = "/usr/local/lib/jruby"
  java.runtime.name = "Java(TM) SE Runtime Environment"
  java.runtime.version = "1.6.0_14-b08"

And the following custom property:

  auth.service = "http://live.example.com"

The default configuration will be extended by JVM properties:

  "auth" => {
    "user" => "client",
    "password => "secret",
    "service" => "http://live.example.com"
  },
  "java" => {
    "runtime" => {
      "name" => "Java(TM) SE Runtime Environment",
      "version" => "1.6.0_14-b08"
    }
  },
  "jruby" => { "home" => "/usr/local/lib/jruby" }
